version: '3.8'

services:
  # 1. Serviço de Banco de Dados (PostgreSQL) - NÃO PRECISA DE REDIS_URL
  db:
    image: postgres:15-alpine
    container_name: meu_projeto_db
    restart: always
    environment:
      # Credenciais necessárias para o PostgreSQL se inicializar:
      POSTGRES_USER: webadmin
      POSTGRES_PASSWORD: BKOzsh61151   
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webadmin -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 2. Serviço de Cache/Fila (Redis) - NÃO PRECISA DE DATABASE_URL
  redis:
    image: redis:alpine
    container_name: meu_projeto_redis
    restart: always
    ports:
      - "6379:6379"

  # 3. Serviço da Aplicação Flask/API (WEB) - PRECISA DE AMBOS
  app:
    build: .
    container_name: meu_projeto_web
    restart: on-failure
    environment:
      # CONFIGURAÇÃO DE AMBIENTE REQUERIDA (HOSTS INTERNOS)
      DATABASE_URL: postgresql://webadmin:BKOzsh61151@db:5432/postgres
      REDIS_URL: redis://:FQKsme84587@redis:6379
      SECRET_KEY: FQKsme84587
      # OUTRAS VARIÁVEIS DE AMBIENTE NECESSÁRIAS
      # FLASK_ENV: production
      # SUPER_ADMIN_EMAIL: op.almeida@hotmail.com
      
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: ["gunicorn", "app:app", "-b", "0.0.0.0:8000", "--workers", "2"] 
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  # 4. Serviço RQ Worker (Robôs) - PRECISA DE AMBOS
  worker:
    build: .
    container_name: meu_projeto_worker
    restart: on-failure
    environment:
      # CONFIGURAÇÃO DE AMBIENTE REQUERIDA (HOSTS INTERNOS)
      DATABASE_URL: postgresql://webadmin:BKOzsh61151@db:5432/postgres
      REDIS_URL: redis://:FQKsme84587@redis:6379
      SECRET_KEY: FQKsme84587
      # OUTRAS VARIÁVEIS DE AMBIENTE NECESSÁRIAS
      
    volumes:
      - .:/app
    command: ["python3", "-m", "rq", "worker", "default", "-u", "redis://redis:6379/0"] 
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_started
      db:
        condition: service_healthy

volumes:
  postgres_data: