version: '3.8'

services:
  # 1. Serviço de Banco de Dados (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: meu_projeto_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 2. Serviço de Cache/Fila (Redis)
  redis:
    image: redis:alpine
    container_name: meu_projeto_redis
    restart: always
    ports:
      - "6379:6379"

  # O SERVIÇO 'migrate' FOI REMOVIDO

  # 3. Serviço da Aplicação Flask/API
  app:
    build: .
    container_name: meu_projeto_web
    restart: on-failure
    # CORREÇÃO CRÍTICA: Força o Docker a ler as variáveis do .env e injetá-las
    env_file:
      - ./.env 
    environment:
      # As URLs são necessárias aqui, mas agora elas usam as variáveis lidas do .env
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: gunicorn app:app -b 0.0.0.0:8000 --workers 2
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  # 4. Serviço RQ Worker (Robôs)
  worker:
    build: .
    container_name: meu_projeto_worker
    restart: on-failure
    # CORREÇÃO CRÍTICA: Força o Docker a ler as variáveis do .env
    env_file:
      - ./.env
    environment:
      # As URLs são necessárias aqui, mas agora elas usam as variáveis lidas do .env
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - .:/app
    command: python3 -m rq worker -u redis://redis:6379/0 default
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_started
      db:
        condition: service_healthy

volumes:
  postgres_data: