# docker-compose.yml (VERSÃO CORRIGIDA E FINAL)
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: meu_projeto_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: meu_projeto_redis

  web:
    build: .
    container_name: meu_projeto_web
    # CORREÇÃO: Usa o script de arranque, que inclui as migrações.
    command: sh -c "./startup.sh"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # Garante que o Gunicorn use a porta 8000
      - PORT=8000
    depends_on:
      db:
        condition: service_healthy # Espera a base de dados estar pronta
      redis:
        condition: service_started

  worker:
    build: .
    container_name: meu_projeto_worker
    # CORREÇÃO: Usa o script do worker, que inclui o agendador de tarefas.
    command: sh -c "python worker.py"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data: