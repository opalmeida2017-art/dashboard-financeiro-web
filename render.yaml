services:
  - type: pserv
    name: financeiro-db
    env: postgres
    plan: free # Verifique se o plano free atende aos requisitos de dados/conexões

  - type: pserv
    name: financeiro-redis
    env: redis
    plan: free # Verifique se o plano free atende aos requisitos

  - type: web
    name: python-dashboard
    env: docker # Usa o Dockerfile
    plan: free # Ou 'starter'/'standard' se precisar de mais recursos
    # buildFilter: # Opcional: para ignorar arquivos/pastas no build
    #   paths:
    #     - src/**
    #   ignoredPaths:
    #     - src/**/*.md
    healthCheckPath: / # Rota básica para Render verificar se o app está vivo
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: financeiro-db
          property: internalConnectionString # Usa a conexão interna mais rápida
      - key: REDIS_URL
        fromService:
          type: pserv
          name: financeiro-redis
          property: connectionString
      - key: PYTHON_VERSION # Informativo, Dockerfile controla a versão
        value: 3.11
      - key: FLASK_ENV
        value: production # Importante para desativar modo debug
      - key: SECRET_KEY
        generateValue: true # Render gera uma chave secreta segura automaticamente
      # Adicione outras variáveis necessárias (ex: SUPER_ADMIN_EMAIL)
      # - key: SUPER_ADMIN_EMAIL
      #   value: seu_email@exemplo.com

  - type: worker
    name: python-dashboard-worker
    env: docker # Usa o mesmo Dockerfile
    plan: free # Ou pago, dependendo da carga do worker
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: financeiro-db
          property: internalConnectionString
      - key: REDIS_URL
        fromService:
          type: pserv
          name: financeiro-redis
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.11
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        sync: false # Não precisa sincronizar do web, pega do ambiente
        generateValue: true # Ou use 'value: SUA_CHAVE' se quiser a mesma do web
      # Adicione outras variáveis
    # Comando para iniciar o worker (confirme se worker.py faz isso)
    startCommand: "python worker.py"
    # Opcional: Auto scaling para workers
    # numInstances: 1
    # scaling:
    #   minInstances: 1
    #   maxInstances: 3
    #   targetCPUPercent: 70